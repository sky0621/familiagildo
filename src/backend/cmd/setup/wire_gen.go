// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package setup

import (
	"github.com/sky0621/familiagildo/adapter/controller"
	"github.com/sky0621/familiagildo/adapter/gateway"
	"github.com/sky0621/familiagildo/app"
	"github.com/sky0621/familiagildo/driver/db"
	"github.com/sky0621/familiagildo/driver/mail"
	"github.com/sky0621/familiagildo/driver/web"
	"github.com/sky0621/familiagildo/usecase"
)

// Injectors from wire.go:

func InitializeApp(cfg app.Config) (App, error) {
	client, err := db.NewClient(cfg)
	if err != nil {
		return App{}, err
	}
	transactionRepository := gateway.NewTransactionRepository(client)
	guestTokenRepository := gateway.NewGuestTokenRepository(client)
	guildRepository := gateway.NewGuildRepository(client)
	mailClient, err := mail.NewClient(cfg)
	if err != nil {
		return App{}, err
	}
	guildEvent := gateway.NewGuildEvent(mailClient)
	guildInputPort := usecase.NewGuild(transactionRepository, guestTokenRepository, guildRepository, guildEvent)
	resolver := controller.NewResolver(guildInputPort)
	server, err := web.NewServer(cfg, resolver)
	if err != nil {
		return App{}, err
	}
	setupApp := NewApp(client, server, mailClient)
	return setupApp, nil
}
