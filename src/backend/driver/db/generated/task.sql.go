// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: task.sql

package generated

import (
	"context"
)

const listTask = `-- name: ListTask :many
SELECT id, content, status, continuity, due_datetime, create_user_id, created_at, update_user_id, updated_at, delete_user_id, deleted_at FROM task ORDER BY id DESC
`

func (q *Queries) ListTask(ctx context.Context) ([]Task, error) {
	rows, err := q.db.QueryContext(ctx, listTask)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Task
	for rows.Next() {
		var i Task
		if err := rows.Scan(
			&i.ID,
			&i.Content,
			&i.Status,
			&i.Continuity,
			&i.DueDatetime,
			&i.CreateUserID,
			&i.CreatedAt,
			&i.UpdateUserID,
			&i.UpdatedAt,
			&i.DeleteUserID,
			&i.DeletedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
